paths:
  /api/products:
    post:
      tags:
        - Products
      summary: Registro de un nuevo Producto en la base de datos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schema/BodyNewProduct'
        required: true
      responses:
        200:
          description: Se registro un producto correctamente
          content: 
            application/json:
              schema: 
                $ref: '#/components/schema/Products/Product'
        500:
          description: Error en el servidor
          $ref: '#/components/schema/Products/NotFound'
    get: 
      tags:
      - Products
      summary: Lista de Productos de la base de datos
      responses:
        200:
          description: Lista de Productos recibida con exito
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/getAllProducts'
        500:
          description: Error en el servidor
          $ref: '#/components/schema/Products/NotFound' 
  /api/products/{id}:
    get:
      tags:
      - Products
      summary: Buscar producto por ID
      parameters:
        - in: path
          name: id
          required: true
          description: string ID
          schema:
            type: string
      responses:
        200:
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/Product'
        404:
          description: No se encuentra un producto con este ID
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/errorGetById'
    put:
      tags:
      - Products
      summary: Editar producto por ID
      parameters:
        - in: path
          name: id
          required: true
          description: string id required
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schema/BodyNewProduct'
        required: true
      responses:
          200:
            description: Producto actualizada
            content:
              application/json:
                schema:
                  $ref: '#/components/schema/Products/Product'
          404:
            description: No se encuentra prod con id {id}
            content:
              application/json:
                schema:
                  $ref: '#/components/schema/Products/errorGetById'     
    delete:
      tags:
      - Products
      summary: Eliminar producto por id
      parameters:
        - in: path
          name: id
          required: true
          description: string id required
          schema:
            type: string
      responses:
        200:
          description: producto eliminado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/deleteById'
        404:
          description: No se encuentra producto con id {id}
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/errorGetById'   
  /api/auth/login:
    post:
      tags:
        - Users
      summary: Inicio de sesi√≥n de un usuario
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schema/BodyNewUser'
        required: true
      responses:
        200:
          description: Inicio de sesion de User OK
          content: 
            application/json:
              schema: 
                $ref: '#/components/schema/Users/User'
        500:
          description: Error en el servidor
          $ref: '#/components/schema/Users/NotFound'
  /api/auth/signup:
    post:
      tags:
        - Users
      summary: Registro de un nuevo User en la base de datos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schema/BodyNewUser'
        required: true
      responses:
        200:
          description: Se registro un User correctamente
          content: 
            application/json:
              schema: 
                $ref: '#/components/schema/Users/User'
        500:
          description: Error en el servidor
          $ref: '#/components/schema/Users/NotFound'  
  /api/chat/save:
    post:
      tags:
        - Messages
      summary: Registro de un nuevo mensaje en la base de datos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schema/BodyNewMessage'
        required: true
      responses:
        200:
          description: Se registro un mensaje correctamente
          content: 
            application/json:
              schema: 
                $ref: '#/components/schema/Messages/Message'
        500:
          description: Error en el servidor
          $ref: '#/components/schema/Messages/NotFound'
  /api/chat/messages/{id}:
    get:
      tags:
      - Messages
      summary: Buscar mensaje por ID
      parameters:
        - in: path
          name: id
          required: true
          description: string ID
          schema:
            type: string
      responses:
        200:
          description: Mensaje encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Messages/Message'
        404:
          description: No se encuentra un mensaje con este ID
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Messages/errorGetById'
    delete:
      tags:
      - Messages
      summary: Eliminar mensaje por id
      parameters:
        - in: path
          name: id
          required: true
          description: string id required
          schema:
            type: string
      responses:
        200:
          description: mensaje eliminado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Messages/deleteById'
        404:
          description: No se encuentra mensaje con id {id}
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Messages/errorGetById'
  /api/categories:
    post:
      tags:
        - Categories
      summary: Registro de una nueva categoria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schema/BodyNewCategory'
        required: true
      responses:
        200:
          description: Se ha creado una nueva categoria
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Categories/Category'
        500:
          description: Error en el servidor
          $ref: '#/components/schema/Categories/NotFound'
    get:
      tags:
      - Categories
      summary: Lista de Categories de la base de datos
      responses:
        200:
          description: Lista de Categorias recibida con exito
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Categories/getAllCategories'
        500:
          description: Error en el servidor
          $ref: '#/components/schema/Categories/NotFound' 
  /api/categories/{id}:
    get:
      tags:
      - Categories
      summary: Buscar categoria por ID
      parameters:
        - in: path
          name: id
          required: true
          description: string ID
          schema:
            type: string
      responses:
        200:
          description: Categoria encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Categories/Category'
        404:
          description: No se encuentra la categoria con este ID
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Categories/Category'
    put:
      tags:
      - Categories
      summary: Editar categoria por ID
      parameters:
        - in: path
          name: id
          required: true
          description: string id required
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schema/BodyNewCategory'
        required: true
      responses:
          200:
            description: Categoria actualizada
            content:
              application/json:
                schema:
                  $ref: '#/components/schema/Categories/Category'
          404:
            description: No se encuentra category con id {id}
            content:
              application/json:
                schema:
                  $ref: '#/components/schema/Categories/errorGetById'     
    delete:
      tags:
      - Categories
      summary: Eliminar categoria por id
      parameters:
        - in: path
          name: id
          required: true
          description: string id required
          schema:
            type: string
      responses:
        200:
          description: categoria eliminada
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Categories/deleteById'
        404:
          description: No se encuentra category con id {id}
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Categories/errorGetById'
  /api/carts:
    post:
      tags:
        - Carts
      summary: Registro de un nuevo Cart en la base de datos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schema/BodyNewCart'
        required: true
      responses:
        200:
          description: Se registro un cart correctamente
          content: 
            application/json:
              schema: 
                $ref: '#/components/schema/Carts/Cart'
        500:
          description: Error en el servidor
          $ref: '#/components/schema/Carts/NotFound'
    get:
      tags:
      - Carts
      summary: Lista de Carritos de la base de datos
      responses:
        200:
          description: Lista de Carritos recibida con exito
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Carts/getAllCarts'
        500:
          description: Error en el servidor
          $ref: '#/components/schema/Carts/NotFound' 
  /api/carts:{id}:
    get:
      tags:
      - Carts
      summary: Buscar Cart por ID
      parameters:
        - in: path
          name: id
          required: true
          description: string ID
          schema:
            type: string
      responses:
        200:
          description: Cart encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Carts/Cart'
        404:
          description: No se encuentra un Cart con este ID
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Carts/errorGetById'    
    put:
      tags:
      - Carts
      summary: Editar Cart por ID
      parameters:
        - in: path
          name: id
          required: true
          description: string id required
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schema/BodyNewCart'
        required: true
      responses:
          200:
            description: Cart actualizado
            content:
              application/json:
                schema:
                  $ref: '#/components/schema/Carts/Cart'
          404:
            description: No se encuentra Cart con id {id}
            content:
              application/json:
                schema:
                  $ref: '#/components/schema/Carts/errorGetById'
    delete:
      tags:
      - Carts
      summary: Eliminar Cart por id
      parameters:
        - in: path
          name: id
          required: true
          description: string id required
          schema:
            type: string
      responses:
        200:
          description: Cart eliminado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Carts/deleteById'
        404:
          description: No se encuentra Cart con id {id}
          content:
            application/json:
              schema: